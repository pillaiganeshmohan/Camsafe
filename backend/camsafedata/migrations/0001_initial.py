# Generated by Django 5.0.4 on 2024-04-05 03:32

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('user_role', models.CharField(max_length=100)),
                ('police_station_code', models.CharField(max_length=100)),
                ('police_station_name', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('taluka', models.CharField(max_length=100)),
                ('pin_code', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('thane_incharge', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='AdminIdentity',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('contactNumber', models.IntegerField()),
                ('email', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('policeStationName', models.CharField(max_length=50)),
                ('policeStationCode', models.CharField(max_length=10)),
                ('thanaIncharge', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=250)),
                ('pinCode', models.IntegerField()),
                ('state', models.CharField(max_length=25)),
                ('district', models.CharField(max_length=25)),
                ('taluka', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='CCTVIdentityMaster',
            fields=[
                ('camera_location_name', models.CharField(max_length=50)),
                ('camera_number', models.IntegerField()),
                ('camera_brand', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=25)),
                ('state', models.CharField(max_length=40)),
                ('district', models.CharField(max_length=40)),
                ('taluka', models.CharField(max_length=40)),
                ('pin_code', models.IntegerField(max_length=6)),
                ('address', models.CharField(max_length=200)),
                ('camera_id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=25)),
                ('latitude', models.IntegerField()),
                ('longitude', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CcTVIdentityTransaction',
            fields=[
                ('CTVIT_camera_number', models.IntegerField(max_length=20)),
                ('CTVIT_date_day', models.CharField(max_length=20)),
                ('CTVIT_footage_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('CTVIT_footage', models.CharField(max_length=1000)),
                ('CTVIT_camera_id', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50, primary_key=True, serialize=False)),
                ('message', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureData',
            fields=[
                ('FT_feature_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('FT_subject_id', models.CharField(max_length=50)),
                ('FT_left_eye', models.CharField(max_length=50)),
                ('FT_right_eye', models.CharField(max_length=1000)),
                ('FT_nose', models.CharField(max_length=1000)),
                ('FT_lips', models.CharField(max_length=1000)),
                ('FT_left_eyebrow', models.CharField(max_length=1000)),
                ('FT_right_eyebrow', models.CharField(max_length=1000)),
                ('FT_left_ear', models.CharField(max_length=1000)),
                ('FT_right_ear', models.CharField(max_length=1000)),
                ('FT_hair_color', models.CharField(max_length=1000)),
                ('FT_eye_color', models.CharField(max_length=1000)),
                ('FT_beard', models.CharField(max_length=1000)),
                ('FT_mustache', models.CharField(max_length=1000)),
                ('FT_mole', models.CharField(max_length=1000)),
                ('FT_birth_mark', models.CharField(max_length=1000)),
                ('FT_hair', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('SI_subject_id', models.IntegerField(primary_key=True, serialize=False)),
                ('SI_subject_name', models.CharField(max_length=50)),
                ('SI_subject_address', models.CharField(max_length=200)),
                ('SI_subject_age', models.IntegerField()),
                ('SI_subject_gender', models.CharField(max_length=10)),
                ('SI_subject_offence', models.CharField(max_length=100)),
                ('SI_front_profile', models.CharField(max_length=1000)),
                ('SI_left_profile', models.CharField(max_length=1000)),
                ('SI_right_profile', models.CharField(max_length=1000)),
                ('SI_iris', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectHistory',
            fields=[
                ('SH_subject_id', models.IntegerField(primary_key=True, serialize=False)),
                ('SH_subject_name', models.CharField(max_length=50)),
                ('SH_camera_location_name', models.CharField(max_length=50)),
                ('SH_date', models.CharField(max_length=20)),
                ('SH_day', models.CharField(max_length=20)),
                ('SH_footage_id', models.CharField(max_length=20)),
                ('SH_camera_id', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='UserIdentity',
            fields=[
                ('userid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('contactNumber', models.IntegerField(max_length=10)),
                ('password', models.CharField(max_length=50)),
                ('policeCenterCode', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
